<config>
    <!--
    This is a sample configuration for a SciTokens server. It contains all that is necessary to boot it up and
    get it running. It does NOT have any configurations for clients which must be added on a per client basis.
    Much of what is here is place holders. 
    -->
    <!--
       The service tag contains a lot of information about the system, most of which should not need to be changed
       You should, however set
       name = some human readable name for this configuration. Note that this must be used in the web.xml as well.
       issueATasSciToken = set this true if you want the Access Tokens to be SciTokens
       issuer = this is the issuer in the id_token and has nothing to do with SciTokens. Set it to this server's address
       address = the address of this server. You should set this especially in load-balancing cases where Tomcat's
                 idea of what the server is should not be used.
       debug = Lets you set the level of information you want. "warn" means only warnings, "info" means informational
               messages, "trace" dumps out all manner of low level information. "off" turns everything off.
    -->
    <service name="oa4mp:scitokens.fileStore"
              version="1.0"
              refreshTokenLifetime="1000000"
              refreshTokenEnabled="true"
              enableTwoFactorSupport="true"
              issueATasSciToken="true"
              scheme="sciTokens"
              schemeSpecificPart=""
              clientSecretLength="40"
              OIDCEnabled="false"
              debug="trace"
              issuer="https://address.of.your.server/scitokens-server"
              address="https://address.of.your.server/scitokens-server">
               <logging
                 logFileName="/path/to/log/file"
                 logName="scitokens"
                 logSize="100000"
                 logFileCount="2"/>
        <!--
        This block controls the webkeys which you can make with the command line utility.
        -->

         <JSONWebKey defaultKeyID="ID_GOES_HERE">
            <path><![CDATA[/PATH/TO/JSON_WEBKEY_FILE]]></path>
         </JSONWebKey>
         <!--
         In the off chance you need a myproxy server, you can set the configuration here/
         <myproxy host="tfca.ncsa.illinois.edu" port="7512"/>
         -->
        <!--
        In this example, there is a file store that will back this service. Since this contains sensitive information
        the correct permissions are that the oowner is root and the group is tomcat (so the servlet engine can access it).
        Make sure that only the owner or correct group members can access it.
        The tags within the fileStore are all the types of things that can be stored in it and need not be changed.
        -->
        <fileStore path="/opt/oa2/var/storage/scitokens-erver">
            <transactions/><clients/><clientApprovals/><permissions/><adminClients/>
        </fileStore>
        <!--
            This enabled email notifications
        -->
         <mail enabled="true"
            useSSL="false"
              username="YOUR USERNAME"
              password="YOUR PASSWORD"
              debug="true"
              server="YOUR SERVER ADDRESS"
              recipients="LIST OF RECIPIENTS">
             <messageTemplate>/PATH/TO/errorMessage.template</messageTemplate>
             <subjectTemplate>/PATH/TO/errorSubject.template</subjectTemplate>
         </mail>
     </service>


    </config>
